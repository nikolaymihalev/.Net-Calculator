<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>